
--------------------------------------------------
This is a mission file for Freedroid.
--------------------------------------------------

This mission is named "Classical Paradroid Mission",
because it is the same mission with the same droids and
at the same location as in the classical C64 game.
It is the first mission file I write and shall serve
as an example for further mission files to come.

--------------------------------------------------

The structure of a mission file is simple.
* There must be a starting string indicating the
  start of the real mission data.
* A mission name must be specified
* A mission briefing text must be specified
* A mission target must be specified.
* A "ship" must be specified, where a "ship" could also
  be for example a small automated mining community or
  a building complex somewhere on a planet.
* A crew file must be specified, where the information which
  droids are to be generated in which levels can be found.
* A "game.dat" file must be specified, containing all the
  droid specifications and the constants for the game
  physics.
* An elevator file must be specified.
* A missing file termination string should be present to indicate
  the end and the integrity of the mission file.

What all these strings must look like can easily deduced 
directly form the following example.

--------------------------------------------------

*** Start of Mission File ***
Mission Name: Classical Paradroid Mission
Physics ('game.dat') file to use for this mission: game.dat
Ship file to use for this mission: new_ship_1.ship
Elevator file to use for this mission: new_ship_1.elevators
Crew file to use for this mission: new_ship_1.crew
** Start of Mission Briefing Text Section **
* New Mission Briefing Text Subsection *
In the year 2400 in a far distant galaxy strange civilisation has been enslaved by an all-mighty Software Corporation named 'MegaSoft' and called MS for short.  This came to be as follows:  At first all the druids of that civilisation were running a MS Operating System which turned out to be a trojan horse and led to the revolution and the enslavement of men.  By virtue of the tremendous wealth the Corporation had accumulated it was able to break all resistances and ban all other operating systems forever, using the druids with their MS Operating System to enforce the oppression with military strength.

  However not all is yet lost:
A small group of rebels has managed to create a new 'influence device' running the latest Linux 28.32.199 kernel.  The rebels will soon be spotted and can not hope to withstand an open attack.  The Influence device must be beamed aboard an unmanned transport ship that could evacuate the rebel group.  In the first episode, the rebel influence device is beamed aboard the robo freighter and must eliminate all of the robot crew running the MS operating system.  After this is done, the rebels can beam aboard and make their escape to some distant planet from where they can prepare their next steps to free the world from oppression.

 Press Space Bar to launch


* End of Mission Briefing Text Subsection *
* New Mission Briefing Text Subsection *
The 001 Influence Device consists of a helmet, which, when placed over a robots control unit can halt the normal activities of that robot for a short time. The helmet has its own energy supply and powers the robot itself, at an upgraded capability. The helmet also uses an energy cloak for protection of the host. The helmet is fitted with twin lasers mounted in a turret. These can be focussed on any target inside a range of eight metres. Most of the device's resources are channelled towards holding control of the host robot, as it attempts to resume 'normal' operation. It is therefore necessary to change the host robot often to prevent the device from burning out. Transfer to a new robot requires the device to drain its host of energy in order to take ist over. Failure to achieve transfer results in the device being a free agent once more.

       Press space bar to skip instructions


* End of Mission Briefing Text Subsection *
* New Mission Briefing Text Subsection *
An Influence Device can transmitt data to your console.  A small-scale plan of the whole deck is available, as well as a side elevation of the ship. Robots are represented on-screen as a symbol showing a three-digit number. The first digit shown is the important one, the class of the robot. It denotes the strength also. To find out more about any given robot, use the robot enquiry system at a console. Only data about units of a lower class than your current host is available, since it is the host's security clearance which is used to acces the console. 



Press space bar to skip instructions



* End of Mission Briefing Text Subsection *
* New Mission Briefing Text Subsection *
Controls

The game is controlled via keyboard input or via joystick input.
The joystick control is similar to keyboard control.
Therefore only keyboard control is expained here:

Use cursor keys to move around.  The speed you can go depends on the druid you currently control.

If you press space bar in -addition- to a cursor key, this fires the weapon of the druid you currently control.


If you press space bar whilst NOT pressing a cursor key, this will enter transfer mode.  You will notice your robot to take on a flashy red color.  Now if you touch some other druid, this will initiate the takeover process in which you have to win a small game of logical curcuits within the given time.
If you succeed, you thereafter can control this new droid and for game purposes, it is as if you were him.
If you loose, you either are destroyed if you didn't control an enemy druid at that time, or the host you controlled is destroyed together with the unit you wished to control.

The P key causes the game to pause.
The S key causes a screenshot to be taken.
The Escape key causes the menu to pop up.

Watch out for energy refreshing fields and elevators.

Elevators are also entered via transfer mode if you stand still on the elevaor.

    Press Fire to Play





* End of Mission Briefing Text Subsection *

*** End of Mission File ***



